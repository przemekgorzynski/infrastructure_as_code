parameters:
- name: image
  displayName: Pool Image
  type: string
  default: ubuntu-latest
  values:
  - ubuntu-latest

trigger:
  batch: false
  branches:
    include:
    - azure_example1_terraform_devops_pipeline
  paths:
    include:
    - terraform/azure-infra/example1/*

stages :
  - stage: Installation
    jobs:
    - job: Install_Terraform
      continueOnError: false
      pool:
        vmImage: '${{ parameters.image }}'
      steps:
      - task: TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: '0.12.3'
    - job: Init_Provider
      steps:
      - task: TerraformTaskV1@0
        displayName: 'init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendAzureRmStorageAccountName: 'storagefortfcode'
          backendAzureRmContainerName: 'terraform'
          backendServiceArm: 'WSBAzureSP'
          backendAzureRmResourceGroupName: 'Terraform'
          backendAzureRmKey: 'terraform.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
  - stage: Validation
    jobs:
    - job: Validate_code
      steps:
      - task: TerraformTaskV1@0
        displayName: 'validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'
          backendServiceArm: 'WSBAzureSP'
  - stage: Deployment
    jobs:
    - job: Terraform_plan
      steps:
        - task: TerraformTaskV1@0
          displayName: 'plan'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'WSBAzureSP'
            configurationDirectory: '$(System.DefaultWorkingDirectory)/terraform'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
#        - task: TerraformTaskV1@0
#          displayName: 'apply'
#          inputs:
#            provider: 'azurerm'
#            command: 'apply'
#            environmentServiceNameAzureRM: 'tamopstf'
          
